-- Aimbot Script - Geladen über Loadstring
getgenv().AimBotConfig = getgenv().AimBotConfig or {}
local config = getgenv().AimBotConfig

-- Default Settings
config.visibilityCheck = config.visibilityCheck or true
config.aimEnabled = config.aimEnabled or false
config.FOVRadius = config.FOVRadius or 150
config.smoothness = config.smoothness or 0.2
config.aimPart = config.aimPart or "HumanoidRootPart"
config.teamCheck = config.teamCheck or false

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

-- Function to Check Visibility
local function isTargetVisible(targetPart)
    if not config.visibilityCheck then
        return true -- Wenn deaktiviert, überspringen
    end

    local origin = Camera.CFrame.Position
    local direction = (targetPart.Position - origin).Unit * (targetPart.Position - origin).Magnitude
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, targetPart.Parent}
    raycastParams.FilterType = Enum.RaycastFilterType.Exclude

    local raycastResult = Workspace:Raycast(origin, direction, raycastParams)
    return not raycastResult -- Wenn keine Blockade, Ziel ist sichtbar
end

-- Main Aim-Lock Functionality
RunService.RenderStepped:Connect(function()
    if config.aimEnabled and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        local closestTarget = nil
        local shortestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(config.aimPart) and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
                if not config.teamCheck or player.Team ~= LocalPlayer.Team then
                    local aimPart = player.Character:FindFirstChild(config.aimPart)
                    if aimPart and isTargetVisible(aimPart) then
                        local aimPartScreenPos, onScreen = Camera:WorldToViewportPoint(aimPart.Position)
                        if onScreen then
                            local distance = (Vector2.new(aimPartScreenPos.X, aimPartScreenPos.Y) - UserInputService:GetMouseLocation()).Magnitude
                            if distance < shortestDistance and distance <= config.FOVRadius then
                                closestTarget = player.Character
                                shortestDistance = distance
                            end
                        end
                    end
                end
            end
        end

        if closestTarget then
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, closestTarget[config.aimPart].Position)
        end
    end
end)
